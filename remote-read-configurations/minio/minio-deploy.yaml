
---
apiVersion: v1
kind: Namespace
metadata:
  name: minio-dev
  labels:
    app: minio
--- 
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-pvc
  namespace: minio-dev # Ensure this matches your namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi # Storage size (adjust as needed)
  storageClassName: standard # Use the default storage class
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  namespace: minio-dev
  labels:
    app: minio
spec:
  replicas: 1
  template:
    metadata:
      name: minio
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: quay.io/minio/minio:latest
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 120
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 120
            periodSeconds: 20
          resources:
            requests:
              memory: "1000Mi"
              cpu: "1000m"
            limits:
              memory: "1500Mi"
              cpu: "1500m"
          volumeMounts:
            - mountPath: /data
              name: minio-storage 
          command:
            - /bin/bash
            - -c
          args:
              - minio server /data --console-address :9090
          ports:  
          - containerPort: 9000
            protocol: TCP
          - containerPort: 9090
            protocol: TCP
      volumes:
        - name: minio-storage
          persistentVolumeClaim:
            claimName: minio-pvc
      restartPolicy: Always
  selector:
    matchLabels:
      app: minio
---
apiVersion: v1
kind: Service
metadata:
  name: minio
  namespace: minio-dev
spec:
  type: NodePort
  selector:
    app: minio  
  ports:
    - name: service-port
      protocol: TCP
      port: 9000        
      targetPort: 9000  
      nodePort: 30004
    - name: web-port
      protocol: TCP
      port: 9090        
      targetPort: 9090
      nodePort: 30005

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-ingress
  namespace: minio-dev
spec:
  rules:
  - host: minio.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: minio
            port:
              number: 9090